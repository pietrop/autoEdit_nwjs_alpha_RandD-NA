/**
* hypertranscript.js
* TODO: missing line division with punctuation.
* TODO: change so that HP constructor takes in srt file or string
* calls convert and assigns result to words attribute
*/

var fs = require('fs');
var parser = require('subtitles-parser');

function HyperTranscript(title,description,words){
	this.title =title;
	this.description = description;
	//array of words objects  {startTime: '1829.63',    endTime: '23437.59',  text: '2.1\nSubtitle',  id: 4 }
	// this.words = convertFromSrt(srt) ;
	 this.words =words ;
}

function convertFromSrt(srt){
	//if param contains srt file extension
	if(srt.indexOf('.srt') !=-1){
		srtContent =fs.readFileSync(srtFile,'utf8');
		srtContent = srtContent.toString();
	}else{
		srtContent = srt;
	}
	var data = parser.fromSrt(srtContent,true);
	var hp = convert(data);
	return hp;
}

/**
* takes in an srt file name
* returns a json srt 
*/
function convertFromSrtFile(srtFile){
	var srt =fs.readFileSync(srtFile,'utf8');
	var data = parser.fromSrt(srt.toString(),true);	
	// return data;
	var hp = convert(data);
	return hp;
}

/**
* takes in an content of srt file as string
* returns a json srt 
*/
function convertFromSrtString(srtString){
	var data = parser.fromSrt(srtString,true);	
	// return data;
	var hp = convert(data);
	return hp;
}
module.exports = HyperTranscript;

/**
* Converts srt json as generated by subtitles-parser library
* into hypertranscript == array of words with timecode and other attributes
*/
function convert(srtJson){
	
	var hypertranscript = [];
	var srt_hash =[];
	var lines = srtJson;
		var n =0;
	for(var i=0; i<lines.length ;i++){
		var line = lines[i];
		var word_counter =0;
		var words_in_a_line = line.text.split(" ");

		 number_of_words_in_line = words_in_a_line.length;
		 line_duration = line.endTime - line.startTime;
		 average_word_duration  = line_duration / number_of_words_in_line;
		 number_of_letters_in_a_sentence = 0;

		 //we loop through the array of words, and add up the size of each word
		 for(var j=0; j < words_in_a_line.length; j++){
		 	var word = words_in_a_line[j];
		 	number_of_letters_in_a_sentence += word.length;
		 }
	
	     one_line_array_or_words =[];

	     for(var k=0; k < words_in_a_line.length; k++){
		 	var word = words_in_a_line[k];
		 	word_duration = word.length * average_word_duration;
		 	word_start_time = line.startTime + word_counter * average_word_duration;
		 	word_end_time = word_start_time+word_duration;
		 	corresponding_word = line.text.split(" ")[word_counter];//
		 	
		 	var word_hash ={};
	        word_hash.startTime = (word_start_time/1000).toFixed(2);
	        word_hash.endTime = (word_end_time/1000).toFixed(2);
	        word_hash.text = corresponding_word;
	        hypertranscript.push(word_hash);
	        // console.log(word_hash)
	        // one_line_array_or_words.push(word_hash);
	        // hypertranscript.words.push(word_hash);
	        word_hash.id = n;
	        word_counter +=1;
	        n+=1;
		 }
		 // console.log("one_line_array_or_words");
		 // console.log(one_line_array_or_words);

		  // hypertranscript.words.push(one_line_array_or_words);
		  one_line_array_or_words =[];
      	  // line_number +=1;

	}

	// console.log(hypertranscript);
	// return JSON.stringify(hypertranscript);
	return hypertranscript;
}	


// var HP = require('./hypertranscript.js')
// var s = HP.fromSrtString('1\n00:00:02,000 --> 00:00:06,000\nSubtitle 1.1\nSubtitle 1.2\n\n2\n00:00:28,967 --> 01:30:30,958\nSubtitle 2.1\nSubtitle 2.2\n')
// var h1 = new HP.HyperTranscript('jell', 'desk', s)



module.exports = {
		HyperTranscript : HyperTranscript
		,
		// convertFromSrt : function(srt){
		// return convertFromSrt(srt);
		// }
		fromSrtFile : function(srtFile){
		return convertFromSrtFile(srtFile);
		}, 
		fromSrtString : function(srtString){
		return convertFromSrtString(srtString);
	}
}